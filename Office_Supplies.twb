<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.1214.2200                               -->
<workbook original-version='18.1' source-build='2021.1.9 (20211.21.1214.2200)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='1. OfficeSupplies' inline='true' name='federated.171t2v40vnl0z61ed3nz41wt2poh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='1. OfficeSupplies' name='textscan.0svk09m0m0tr6014qlgm40xwjg48'>
            <connection class='textscan' directory='C:/Users/avinay shau/Downloads' filename='1. OfficeSupplies.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0svk09m0m0tr6014qlgm40xwjg48' name='1. OfficeSupplies.csv' table='[1. OfficeSupplies#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='OrderDate' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='string' name='Rep' ordinal='2' />
            <column datatype='string' name='Item' ordinal='3' />
            <column datatype='integer' name='Units' ordinal='4' />
            <column datatype='real' name='Unit Price' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0svk09m0m0tr6014qlgm40xwjg48' name='1. OfficeSupplies.csv' table='[1. OfficeSupplies#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='OrderDate' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='string' name='Rep' ordinal='2' />
            <column datatype='string' name='Item' ordinal='3' />
            <column datatype='integer' name='Units' ordinal='4' />
            <column datatype='real' name='Unit Price' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[1. OfficeSupplies.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OrderDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[OrderDate]</local-name>
            <parent-name>[1. OfficeSupplies.csv]</parent-name>
            <remote-alias>OrderDate</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[1. OfficeSupplies.csv_41D37C1BD9004D34BE2073463F4A893E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[1. OfficeSupplies.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[1. OfficeSupplies.csv_41D37C1BD9004D34BE2073463F4A893E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rep</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Rep]</local-name>
            <parent-name>[1. OfficeSupplies.csv]</parent-name>
            <remote-alias>Rep</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[1. OfficeSupplies.csv_41D37C1BD9004D34BE2073463F4A893E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Item]</local-name>
            <parent-name>[1. OfficeSupplies.csv]</parent-name>
            <remote-alias>Item</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[1. OfficeSupplies.csv_41D37C1BD9004D34BE2073463F4A893E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Units</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Units]</local-name>
            <parent-name>[1. OfficeSupplies.csv]</parent-name>
            <remote-alias>Units</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[1. OfficeSupplies.csv_41D37C1BD9004D34BE2073463F4A893E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit Price]</local-name>
            <parent-name>[1. OfficeSupplies.csv]</parent-name>
            <remote-alias>Unit Price</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[1. OfficeSupplies.csv_41D37C1BD9004D34BE2073463F4A893E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total_Sales' datatype='real' name='[Calculation_1033576182805000192]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Unit Price] * [Units]' />
      </column>
      <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Rep]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='1. OfficeSupplies.csv' datatype='table' name='[__tableau_internal_object_id__].[1. OfficeSupplies.csv_41D37C1BD9004D34BE2073463F4A893E]' role='measure' type='quantitative' />
      <column-instance column='[Rep]' derivation='None' name='[none:Rep:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Rep:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alex&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Susan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nick&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rachel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;James&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Matthew&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='1. OfficeSupplies.csv' id='1. OfficeSupplies.csv_41D37C1BD9004D34BE2073463F4A893E'>
            <properties context=''>
              <relation connection='textscan.0svk09m0m0tr6014qlgm40xwjg48' name='1. OfficeSupplies.csv' table='[1. OfficeSupplies#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='OrderDate' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                  <column datatype='string' name='Rep' ordinal='2' />
                  <column datatype='string' name='Item' ordinal='3' />
                  <column datatype='integer' name='Units' ordinal='4' />
                  <column datatype='real' name='Unit Price' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='ListOfOrders+ (2. AmazingMartEU2)' inline='true' name='federated.0kfdkbz16r7jr018qb8rn0clxx40' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2. AmazingMartEU2' name='excel-direct.03xv9wo0dpleql1h8l3pv0y80jdr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/avinay shau/Downloads/2. AmazingMartEU2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Mall_Customers (1)' name='textscan.1mq2f7u0fd235o13j9ct41s6v6bz'>
            <connection class='textscan' directory='C:/Users/avinay shau/Downloads' filename='Mall_Customers (1).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[OrderBreakdown].[Category]' />
              <expression op='[SalesTargets].[Category]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[ListOfOrders].[Order ID]' />
                <expression op='[OrderBreakdown].[Order ID]' />
              </expression>
            </clause>
            <relation connection='excel-direct.03xv9wo0dpleql1h8l3pv0y80jdr' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
              <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
                <column datatype='string' name='Order ID' ordinal='0' />
                <column datatype='date' name='Order Date' ordinal='1' />
                <column datatype='string' name='Customer Name' ordinal='2' />
                <column datatype='string' name='City' ordinal='3' />
                <column datatype='string' name='Country' ordinal='4' />
                <column datatype='string' name='Region' ordinal='5' />
                <column datatype='string' name='Segment' ordinal='6' />
                <column datatype='date' name='Ship Date' ordinal='7' />
                <column datatype='string' name='Ship Mode' ordinal='8' />
                <column datatype='string' name='State' ordinal='9' />
              </columns>
            </relation>
            <relation connection='excel-direct.03xv9wo0dpleql1h8l3pv0y80jdr' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
              <columns gridOrigin='A1:H8048:no:A1:H8048:0' header='yes' outcome='6'>
                <column datatype='string' name='Order ID' ordinal='0' />
                <column datatype='string' name='Product Name' ordinal='1' />
                <column datatype='real' name='Discount' ordinal='2' />
                <column datatype='integer' name='Sales' ordinal='3' />
                <column datatype='integer' name='Profit' ordinal='4' />
                <column datatype='integer' name='Quantity' ordinal='5' />
                <column datatype='string' name='Category' ordinal='6' />
                <column datatype='string' name='Sub-Category' ordinal='7' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.03xv9wo0dpleql1h8l3pv0y80jdr' name='SalesTargets' table='[SalesTargets$]' type='table'>
            <columns gridOrigin='A1:C145:no:A1:C145:0' header='yes' outcome='6'>
              <column datatype='date' name='Month of Order Date' ordinal='0' />
              <column datatype='string' name='Category' ordinal='1' />
              <column datatype='integer' name='Target' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[OrderBreakdown].[Category]' />
              <expression op='[SalesTargets].[Category]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[ListOfOrders].[Order ID]' />
                <expression op='[OrderBreakdown].[Order ID]' />
              </expression>
            </clause>
            <relation connection='excel-direct.03xv9wo0dpleql1h8l3pv0y80jdr' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
              <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
                <column datatype='string' name='Order ID' ordinal='0' />
                <column datatype='date' name='Order Date' ordinal='1' />
                <column datatype='string' name='Customer Name' ordinal='2' />
                <column datatype='string' name='City' ordinal='3' />
                <column datatype='string' name='Country' ordinal='4' />
                <column datatype='string' name='Region' ordinal='5' />
                <column datatype='string' name='Segment' ordinal='6' />
                <column datatype='date' name='Ship Date' ordinal='7' />
                <column datatype='string' name='Ship Mode' ordinal='8' />
                <column datatype='string' name='State' ordinal='9' />
              </columns>
            </relation>
            <relation connection='excel-direct.03xv9wo0dpleql1h8l3pv0y80jdr' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
              <columns gridOrigin='A1:H8048:no:A1:H8048:0' header='yes' outcome='6'>
                <column datatype='string' name='Order ID' ordinal='0' />
                <column datatype='string' name='Product Name' ordinal='1' />
                <column datatype='real' name='Discount' ordinal='2' />
                <column datatype='integer' name='Sales' ordinal='3' />
                <column datatype='integer' name='Profit' ordinal='4' />
                <column datatype='integer' name='Quantity' ordinal='5' />
                <column datatype='string' name='Category' ordinal='6' />
                <column datatype='string' name='Sub-Category' ordinal='7' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.03xv9wo0dpleql1h8l3pv0y80jdr' name='SalesTargets' table='[SalesTargets$]' type='table'>
            <columns gridOrigin='A1:C145:no:A1:C145:0' header='yes' outcome='6'>
              <column datatype='date' name='Month of Order Date' ordinal='0' />
              <column datatype='string' name='Category' ordinal='1' />
              <column datatype='integer' name='Target' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category (SalesTargets)]' value='[SalesTargets].[Category]' />
          <map key='[Category]' value='[OrderBreakdown].[Category]' />
          <map key='[City]' value='[ListOfOrders].[City]' />
          <map key='[Country]' value='[ListOfOrders].[Country]' />
          <map key='[Customer Name]' value='[ListOfOrders].[Customer Name]' />
          <map key='[Discount]' value='[OrderBreakdown].[Discount]' />
          <map key='[Month of Order Date]' value='[SalesTargets].[Month of Order Date]' />
          <map key='[Order Date]' value='[ListOfOrders].[Order Date]' />
          <map key='[Order ID (OrderBreakdown)]' value='[OrderBreakdown].[Order ID]' />
          <map key='[Order ID]' value='[ListOfOrders].[Order ID]' />
          <map key='[Product Name]' value='[OrderBreakdown].[Product Name]' />
          <map key='[Profit]' value='[OrderBreakdown].[Profit]' />
          <map key='[Quantity]' value='[OrderBreakdown].[Quantity]' />
          <map key='[Region]' value='[ListOfOrders].[Region]' />
          <map key='[Sales]' value='[OrderBreakdown].[Sales]' />
          <map key='[Segment]' value='[ListOfOrders].[Segment]' />
          <map key='[Ship Date]' value='[ListOfOrders].[Ship Date]' />
          <map key='[Ship Mode]' value='[ListOfOrders].[Ship Mode]' />
          <map key='[State]' value='[ListOfOrders].[State]' />
          <map key='[Sub-Category]' value='[OrderBreakdown].[Sub-Category]' />
          <map key='[Target]' value='[SalesTargets].[Target]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J4118:no:A1:J4118:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (OrderBreakdown)]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H8048:no:A1:H8048:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month of Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Month of Order Date]</local-name>
            <parent-name>[SalesTargets]</parent-name>
            <remote-alias>Month of Order Date</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category (SalesTargets)]</local-name>
            <parent-name>[SalesTargets]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Target</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Target]</local-name>
            <parent-name>[SalesTargets]</parent-name>
            <remote-alias>Target</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SalesTargets]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C145:no:A1:C145:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit_Margin' datatype='real' name='[Calculation_1033576182834614273]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Profit]) / sum([Sales])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='ListOfOrders' datatype='table' name='[__tableau_internal_object_id__].[ListOfOrders_67EBA2921EFC485DA9E856919F79C07A]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='location'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Agde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Amiens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Arnhem&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Badalona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Birkenhead&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bourg-en-Bresse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brussels&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carpentras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cestas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Civitavecchia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cork&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Darmstadt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dorsten&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Ejido&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Euskirchen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Foligno&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Galway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guildford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harlow&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Herten&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ivry-sur-Seine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;La Baule-Escoublac&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Laval&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Les Lilas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Livry-Gargan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lunel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mantes-la-Ville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Messina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mont-Saint-Aignan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Murcia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nogent-sur-Oise&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Orsay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poissy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Purmerend&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rillieux-la-Pape&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rubí&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint-Michel-sur-Orge&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sarreguemines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Siena&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stockholm&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taverny&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tours&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Valdemoro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Versailles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Villeparisis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wasquehal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aachen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alicante&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Antwerp&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aulnay-sous-Bois&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bergheim&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bonn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brest&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Castres&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cologne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cremona&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Digne-les-Bains&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dundee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Erfurt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ferrara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Friedberg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Getafe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenoble&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Halmstad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Helmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ingolstadt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kilwinning&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Langen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Leeds&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lowestoft&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Majadahonda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Massy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Modica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Neuilly-sur-Seine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Odense&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palencia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Piacenza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Regensburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rosenheim&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint-Genis-Laval&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Severo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seraing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Shields&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Talavera de la Reina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Torre del Greco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Velbert&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Villach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vlaardingen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wigan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alphen aan den Rijn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arezzo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Avion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bastia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Biarritz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boscoreale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Briton Ferry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Capua&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cercola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chioggia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Concarneau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cumbernauld&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Domont&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Echirolles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eskilstuna&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Flers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fuenlabrada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Girona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Groningen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hamme&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hengelo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iserlohn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kortrijk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Rozas de Madrid&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Leiden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lisieux&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ludwigsfelde&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mannheim&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Melilla&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Molina de Segura&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mouscron&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oldenburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pamplona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plaisance-du-Touch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prato&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rennes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rotterdam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint-Jean-de-la-Ruelle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sant Boi de Llobregat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sevran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Gallen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taranto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Toulouse&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Unna&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venlo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Villeneuve-d&apos;Ascq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wallasey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Witten&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aix-les-Bains&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Angers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aschaffenburg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Blackpool&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bracknell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bury&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cartagena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chartres&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clichy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cottbus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Den Helder&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Draguignan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elx&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faches-Thumesnil&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fontenay-sous-Bois&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gateshead&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gradignan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guyancourt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hasselt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hilversum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kalundborg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Rochelle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Le Chesnay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Letchworth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Longjumeau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mâcon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marignane&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Middlesbrough&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montecatini Terme&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nancy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oullins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perpignan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pontault-Combault&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ragusa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rochdale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sabadell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint-Priest&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Savigny-le-Temple&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slough&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stourbridge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thiais&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tremblay-en-France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Valladolid&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vichy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Villingen-Schwenningen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Weimar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Agen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amsterdam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arnsberg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baden-Baden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bayreuth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bourges&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bry-sur-Marne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carpi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ceuta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clacton-on-Sea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cormeilles-en-Parisis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dartford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dortmund&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;El Escorial&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Evreux&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fontaine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gandia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gonesse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guimarães&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harrogate&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;High Wycombe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Ciotat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Le Blanc-Mesnil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Les Mureaux&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lohne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marano di Napoli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Metz&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montargis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Muret&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Noisy-le-Grand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oslo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Passau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poitiers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Puteaux&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rimini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rueil-Malmaison&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint-Nazaire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sartrouville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sindelfingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stockport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Teramo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trani&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Valence&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vertou&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Villeurbanne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waterlooville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Worms&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Acerra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Altamura&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aylesbury&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bideford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bottrop&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brive-la-Gaillarde&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carcassonne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cergy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Choisy-le-Roi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Conflans-Sainte-Honorine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cuneo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Doncaster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Edinburgh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Espoo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fleury-les-Aubrais&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fulda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Givors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grosseto&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haninge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hereford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Issoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kotka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Latina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Leipzig&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Littlehampton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ludwigshafen am Rhein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Manresa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Melun&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moncalieri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mulhouse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nieuwegein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pantin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Plaisir&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roubaix&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint-Laurent-du-Var&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Santander&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sheffield&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tarbes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tourcoing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Upplands Väsby&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Verdun&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Villeneuve-le-Roi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Walsall&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woking&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alessandria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Antibes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Auch&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barneveld&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolzano&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brescia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Calais&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Castelldefels&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chemnitz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colchester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crawley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dewsbury&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dudley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ercolano&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Feira&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Freiburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Genoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Great Yarmouth&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Halle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Heidelberg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Illkirch-Graffenstaden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kidderminster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Landskrona&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Le Pré-Saint-Gervais&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Limay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Loures&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maisons-Alfort&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martigues&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mitry-Mory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montreuil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Neuilly-Plaisance&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nuremberg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paisley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peterborough&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portici&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Recklinghausen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ronchin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint-Denis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Fernando&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Segovia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sonneberg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Swansea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Torcy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Troisdorf&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vaulx-en-Velin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vitry-sur-Seine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Widnes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zwolle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aalen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alkmaar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anzio&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Auxerre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Basel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bergisch Gladbach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bonneuil-sur-Marne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brighton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cannes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Castrop-Rauxel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chiclana de la Frontera&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colombes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crewe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dijon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dunstable&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Erlangen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Firminy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Friedrichshafen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Getxo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grevenbroich&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hamar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Helsingborg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Innsbruck&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kingswood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Langenfeld&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Leeuwarden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Linz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lucca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malakoff&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauguio&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Neunkirchen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Odivelas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palermo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pierrefitte-sur-Seine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Potenza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reggio nell&apos;Emilia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rosny-sous-Bois&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint-Germain-en-Laye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sanary-sur-Mer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sesto San Giovanni&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Southend-on-Sea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Talence&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Torremolinos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turku&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Velletri&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Villefontaine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Voiron&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilhelmshaven&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Albi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Annemasse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Athis-Mons&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bari&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Berck&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bologna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Breda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cagliari&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Casoria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chelmsford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cognac&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cournon-d&apos;Auvergne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deuil-la-Barre&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dreux&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Enschede&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fareham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frankfurt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Genk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gravesend&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Halesowen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hazebrouck&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Huddinge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kerpen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lagny-sur-Marne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Le Plessis-Robinson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libourne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lormont&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maidstone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marsala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Narbonne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Novara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oyonnax&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pescara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pontoise&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ravenna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roissy-en-Brie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint-Chamond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Salon-de-Provence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Schiltigheim&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Solna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sucy-en-Brie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tivoli&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vanves&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vigneux-sur-Seine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vitoria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wetter (Ruhr)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zurich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Acireale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Amadora&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argenteuil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bad Waldsee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Battipaglia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bielefeld&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Boulogne-Billancourt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bron&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cardiff&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cerignola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cholet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copenhagen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuxhaven&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dordrecht&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eggenstein-Leopoldshafen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Essen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gagny&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gladbeck&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guadalajara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Herford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Issy-les-Moulineaux&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Krefeld&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lattes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liverpool&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lugo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Menden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mons-en-Baroeul&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Munich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nijmegen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oosterhout&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paris&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ploemeur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puertollano&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Reutlingen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rouen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint-Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santiago de Compostela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shrewsbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stains&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tarragona&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tournai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uppsala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Villeneuve-Saint-Georges&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Warrington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wolfsburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ajaccio&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anglet&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ashford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bar-le-Duc&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belfort&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Blanquefort&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Busto Arsizio&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cártama&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clichy-sous-Bois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coudekerque-Branche&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Drammen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Emden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Faenza&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Forbach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Granada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haarlem&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hastings&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hinckley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Karlsruhe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;La Seyne-sur-Mer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Le Havre&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leuven&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lons-le-Saunier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Madrid&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marina di Carrara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mijas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montesson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nanterre&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Northwich&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Outreau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pertuis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ponteareas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rambouillet&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rochefort&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sagunto&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint-Quentin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Savona&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Soissons&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stralsund&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thionville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trento&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vallauris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vienna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vincennes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wels&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zaanstad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Albacete&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Annecy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Assen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barakaldo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benevento&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bochum&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Braga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cachan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carvin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chaumont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cluses&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coulommiers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Derby&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Drancy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Emmen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Falconara Marittima&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Forst&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gelsenkirchen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Granollers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hagen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hattingen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hove&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karlstad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;La Spezia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Le Mans&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Levallois-Perret&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lorca&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Magdeburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Milan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montgeron&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nantes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oviedo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Perugia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pontevedra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Randers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roermond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint-Avold&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Salamanca&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Schiedam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solihull&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Strasbourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thonon-les-Bains&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Treviglio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vannes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Viersen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Viroflay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Bromwich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zamora&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alcobendas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Annonay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aubervilliers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barletta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bergamo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bremen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cagnes-sur-Mer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Castellammare di Stabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cheltenham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Coimbra&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Coventry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deventer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Epinal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Farnborough&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Frederiksberg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gennevilliers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Graz&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Heerlen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Huelva&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kettering&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Landerneau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Le Pontet&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lille&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Loughborough&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mainz&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marseille&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Miramas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montpellier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Neubrandenburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nuneaton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paderborn&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pessac&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poole&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint-Cloud&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Salzburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Schwerin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sonderborg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sunderland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trieste&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Varese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vignola&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vitrolles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wetzlar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zwickau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alfortville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Antony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Augsburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barnsley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bergen op Zoom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bondy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bressuire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cambrai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Castelnau-le-Lez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Colmar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Creil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dieppe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Duisburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Erftstadt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ferndown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresnes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gera&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greifswald&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Halluin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Heilbronn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Imola&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kiel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lanester&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lecce&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Limoges&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Louviers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maisons-Laffitte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Modena&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montrouge&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Neuilly-sur-Marne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oberhausen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palaiseau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pforzheim&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Porto&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redditch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roosendaal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint-Dizier&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Sebastian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senlis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sorgues&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swindon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Torquay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tulle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Veenendaal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vila Nova de Gaia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vittoria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wiesbaden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Agrigento&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ancona&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bagneux&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beaune&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bisceglie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bourgoin-Jallieu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burgos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carquefou&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Champigny-sur-Marne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clamart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cosenza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delft&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dos Hermanas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Prat de Llobregat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Evry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fontainebleau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gap&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gosport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gummersbach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hilden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jerez de la Frontera&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Crau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Le Bouscat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Les Pavillons-sous-Bois&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lomme&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marbella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Meudon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montauban&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nacka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Noisy-le-Sec&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Osny&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pomezia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Quartu Sant&apos;Elena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Riom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rugby&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint-Ouen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sassari&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sittard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stockton-on-Tees&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Terneuzen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trapani&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Verviers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Villiers-le-Bel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Watford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Worthing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Afragola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amersfoort&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Badajoz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bayeux&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bilbao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boulogne-sur-Mer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bruges&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cesena&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cinisello Balsamo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Corbeil-Essonnes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dormagen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eindhoven&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estepona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Foggia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gallarate&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Glasgow&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guidonia Montecelio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hardenberg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Herne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Istres&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kristiansand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lausanne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Les Herbiers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lund&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mantes-la-Jolie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Menton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mont-de-Marsan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Munster&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niort&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Orihuela&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Parla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pulheim&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rhondda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rovigo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint-Malo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sarcelles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Siegen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stavanger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taunton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tournefeuille&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Utrecht&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Verona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Villeneuve-sur-Lot&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wolverhampton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aalst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allauch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Apeldoorn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Avellino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Basildon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bordeaux&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brindisi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Capannori&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Catania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chieti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colomiers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crotone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dinslaken&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Kilbride&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ermont&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiumicino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frontignan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ghent&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grigny&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Helsinki&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ipswich&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Klagenfurt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Langenhagen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Legnano&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lippstadt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lucerne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Meaux&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moissy-Cramayel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mougins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neuwied&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Offenbach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palma de Mallorca&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pisa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Potsdam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Reims&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rostock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint-Gratien&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sandnes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sète&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Southport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tallaght&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Torrevieja&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uithoorn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Velsen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Villejuif&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waiblingen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Willich&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Albertville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Annecy-le-Vieux&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barcelona&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Benidorm&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bognor Regis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brandenburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Caen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Caserta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clydach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Courbevoie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Detmold&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dresden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ennigerloh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fano&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Franconville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grasse&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haguenau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hautmont&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Huddersfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kassel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Teste-de-Buch&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Le Petit-Quevilly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Leverkusen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lorient&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maidenhead&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marly-le-Roi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Millau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montigny-le-Bretonneux&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Naples&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nottingham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pesaro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pontivy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ratingen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roeselare&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint-Brieuc&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Schiffweiler&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Solingen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stuttgart&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tilburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Treviso&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vantaa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vigevano&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Viterbo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Weston-super-Mare&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zeist&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aix-en-Provence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arrentela&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bagnolet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beauvais&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Blackburn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bournemouth&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burnley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carrara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charleroi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clermont-Ferrand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coslada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Delmenhorst&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Douai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Exeter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fontenay-aux-Roses&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garbsen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gothenburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Günzburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hartlepool&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hildesheim&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kaiserslautern&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Madeleine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Le Cannet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Les Ulis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;London&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maastricht&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meyzieu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montbrison&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Namur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norderstedt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oss&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ponferrada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Quimper&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roanne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Runcorn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint-Pol-sur-Mer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saumur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Six-Fours-les-Plages&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stoke-on-Trent&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;The Hague&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trappes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Valenciennes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vicenza&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Villiers-sur-Marne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wattrelos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wuppertal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Almelo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aprilia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Avignon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Basingstoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Borken&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Capelle aan den IJssel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Celle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chilly-Mazarin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Como&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuenca&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Doetinchem&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eastbourne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Esbjerg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flensburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fuengirola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gillingham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gronau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hamm&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hemel Hempstead&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Irun&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Koblenz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Leicester&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lisbon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ludwigsburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manfredonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mechelen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Molfetta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moulins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Newcastle upon Tyne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Offenburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pamiers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pistoia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pozzuoli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Remscheid&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rotherham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint-Herblain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sannois&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spijkenisse&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tamworth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Toulon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ulm&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Venice&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Villemomble&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wakefield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Winterthur&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='ListOfOrders' id='ListOfOrders_67EBA2921EFC485DA9E856919F79C07A'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[OrderBreakdown].[Category]' />
                    <expression op='[SalesTargets].[Category]' />
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[ListOfOrders].[Order ID]' />
                      <expression op='[OrderBreakdown].[Order ID]' />
                    </expression>
                  </clause>
                  <relation connection='excel-direct.03xv9wo0dpleql1h8l3pv0y80jdr' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
                    <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
                      <column datatype='string' name='Order ID' ordinal='0' />
                      <column datatype='date' name='Order Date' ordinal='1' />
                      <column datatype='string' name='Customer Name' ordinal='2' />
                      <column datatype='string' name='City' ordinal='3' />
                      <column datatype='string' name='Country' ordinal='4' />
                      <column datatype='string' name='Region' ordinal='5' />
                      <column datatype='string' name='Segment' ordinal='6' />
                      <column datatype='date' name='Ship Date' ordinal='7' />
                      <column datatype='string' name='Ship Mode' ordinal='8' />
                      <column datatype='string' name='State' ordinal='9' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.03xv9wo0dpleql1h8l3pv0y80jdr' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
                    <columns gridOrigin='A1:H8048:no:A1:H8048:0' header='yes' outcome='6'>
                      <column datatype='string' name='Order ID' ordinal='0' />
                      <column datatype='string' name='Product Name' ordinal='1' />
                      <column datatype='real' name='Discount' ordinal='2' />
                      <column datatype='integer' name='Sales' ordinal='3' />
                      <column datatype='integer' name='Profit' ordinal='4' />
                      <column datatype='integer' name='Quantity' ordinal='5' />
                      <column datatype='string' name='Category' ordinal='6' />
                      <column datatype='string' name='Sub-Category' ordinal='7' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='excel-direct.03xv9wo0dpleql1h8l3pv0y80jdr' name='SalesTargets' table='[SalesTargets$]' type='table'>
                  <columns gridOrigin='A1:C145:no:A1:C145:0' header='yes' outcome='6'>
                    <column datatype='date' name='Month of Order Date' ordinal='0' />
                    <column datatype='string' name='Category' ordinal='1' />
                    <column datatype='integer' name='Target' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Mall_Customers (1)' inline='true' name='federated.0rlpj5514ccu3f0zl20wh10wbrpe' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Mall_Customers (1)' name='textscan.0gu61it1gsod6h1fghx7i0927fhx'>
            <connection class='textscan' directory='C:/Users/avinay shau/Downloads' filename='Mall_Customers (1).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0gu61it1gsod6h1fghx7i0927fhx' name='Mall_Customers (1).csv' table='[Mall_Customers (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='CustomerID' ordinal='0' />
            <column datatype='string' name='Gender' ordinal='1' />
            <column datatype='integer' name='Age' ordinal='2' />
            <column datatype='integer' name='Annual Income (k$)' ordinal='3' />
            <column datatype='integer' name='Spending Score (1-100)' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0gu61it1gsod6h1fghx7i0927fhx' name='Mall_Customers (1).csv' table='[Mall_Customers (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='CustomerID' ordinal='0' />
            <column datatype='string' name='Gender' ordinal='1' />
            <column datatype='integer' name='Age' ordinal='2' />
            <column datatype='integer' name='Annual Income (k$)' ordinal='3' />
            <column datatype='integer' name='Spending Score (1-100)' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Mall_Customers (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustomerID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CustomerID]</local-name>
            <parent-name>[Mall_Customers (1).csv]</parent-name>
            <remote-alias>CustomerID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mall_Customers (1).csv_E1CA32D395FC48259036D18C32CFC759]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Mall_Customers (1).csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mall_Customers (1).csv_E1CA32D395FC48259036D18C32CFC759]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[Mall_Customers (1).csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mall_Customers (1).csv_E1CA32D395FC48259036D18C32CFC759]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual Income (k$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual Income (k$)]</local-name>
            <parent-name>[Mall_Customers (1).csv]</parent-name>
            <remote-alias>Annual Income (k$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mall_Customers (1).csv_E1CA32D395FC48259036D18C32CFC759]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Spending Score (1-100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Spending Score (1-100)]</local-name>
            <parent-name>[Mall_Customers (1).csv]</parent-name>
            <remote-alias>Spending Score (1-100)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mall_Customers (1).csv_E1CA32D395FC48259036D18C32CFC759]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Annual Income (k$)]' role='measure' type='quantitative' />
      <column caption='Customer ID' datatype='integer' name='[CustomerID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Spending Score (1-100)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Mall_Customers (1).csv' datatype='table' name='[__tableau_internal_object_id__].[Mall_Customers (1).csv_E1CA32D395FC48259036D18C32CFC759]' role='measure' type='quantitative' />
      <column-instance column='[Annual Income (k$)]' derivation='Sum' name='[sum:Annual Income (k$):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Spending Score (1-100)]' derivation='Sum' name='[sum:Spending Score (1-100):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{86494dc4-2606-4c31-a81e-5178ca4ca2d6}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0rlpj5514ccu3f0zl20wh10wbrpe].[sum:Annual Income (k$):qk]' />
            <field name='[federated.0rlpj5514ccu3f0zl20wh10wbrpe].[sum:Spending Score (1-100):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields>
          <field name='[federated.0rlpj5514ccu3f0zl20wh10wbrpe].[AdhocCluster:1]' />
        </result-fields>
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Mall_Customers (1).csv' id='Mall_Customers (1).csv_E1CA32D395FC48259036D18C32CFC759'>
            <properties context=''>
              <relation connection='textscan.0gu61it1gsod6h1fghx7i0927fhx' name='Mall_Customers (1).csv' table='[Mall_Customers (1)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='CustomerID' ordinal='0' />
                  <column datatype='string' name='Gender' ordinal='1' />
                  <column datatype='integer' name='Age' ordinal='2' />
                  <column datatype='integer' name='Annual Income (k$)' ordinal='3' />
                  <column datatype='integer' name='Spending Score (1-100)' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (3. Long-Term-Unemployment-Statistics)' inline='true' name='federated.0g6e2uh1i0gg7d1avh1gt1sgh8xm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='3. Long-Term-Unemployment-Statistics' name='excel-direct.0bha51c0r1d4mr1h1swfm0as49yb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/avinay shau/Downloads/3. Long-Term-Unemployment-Statistics.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0bha51c0r1d4mr1h1swfm0as49yb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D1709:no:A1:D1709:0' header='yes' outcome='6'>
            <column datatype='string' name='Age' ordinal='0' />
            <column datatype='string' name='Gender' ordinal='1' />
            <column datatype='date' name='Period' ordinal='2' />
            <column datatype='integer' name='Unemployed' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0bha51c0r1d4mr1h1swfm0as49yb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D1709:no:A1:D1709:0' header='yes' outcome='6'>
            <column datatype='string' name='Age' ordinal='0' />
            <column datatype='string' name='Gender' ordinal='1' />
            <column datatype='date' name='Period' ordinal='2' />
            <column datatype='integer' name='Unemployed' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1709:no:A1:D1709:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_26E3853C0C434D62BD6822E268B3D0A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_26E3853C0C434D62BD6822E268B3D0A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Period</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Period]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Period</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_26E3853C0C434D62BD6822E268B3D0A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unemployed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Unemployed</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_26E3853C0C434D62BD6822E268B3D0A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_26E3853C0C434D62BD6822E268B3D0A7]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/avinay shau/OneDrive/Desktop/Power BI/Tableau/Sheet1 (3. Long-Term-Unemployment-Statistics).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/23/2024 08:15:26 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (3. Long-Term-Unemployment-Statistics)' increment-value='%null%' refresh-type='create' rows-inserted='1708' timestamp-start='2024-03-23 08:15:26.611' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Age</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Age</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_26E3853C0C434D62BD6822E268B3D0A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_26E3853C0C434D62BD6822E268B3D0A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Period</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Period]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Period</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>122</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_26E3853C0C434D62BD6822E268B3D0A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unemployed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Unemployed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unemployed</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>553</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_26E3853C0C434D62BD6822E268B3D0A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_26E3853C0C434D62BD6822E268B3D0A7'>
            <properties context=''>
              <relation connection='excel-direct.0bha51c0r1d4mr1h1swfm0as49yb' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D1709:no:A1:D1709:0' header='yes' outcome='6'>
                  <column datatype='string' name='Age' ordinal='0' />
                  <column datatype='string' name='Gender' ordinal='1' />
                  <column datatype='date' name='Period' ordinal='2' />
                  <column datatype='integer' name='Unemployed' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0kfdkbz16r7jr018qb8rn0clxx40'>
      <datasources>
        <datasource caption='ListOfOrders+ (2. AmazingMartEU2)' name='federated.0kfdkbz16r7jr018qb8rn0clxx40' />
      </datasources>
      <datasource-dependencies datasource='federated.0kfdkbz16r7jr018qb8rn0clxx40'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[yr:Order Date:ok]'>
        <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Area Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='1. OfficeSupplies' name='federated.171t2v40vnl0z61ed3nz41wt2poh' />
          </datasources>
          <datasource-dependencies datasource='federated.171t2v40vnl0z61ed3nz41wt2poh'>
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Unit Price]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[OrderDate]' derivation='Quarter' name='[qr:OrderDate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unit Price]' derivation='Sum' name='[sum:Unit Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.171t2v40vnl0z61ed3nz41wt2poh].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.171t2v40vnl0z61ed3nz41wt2poh].[sum:Unit Price:qk]</rows>
        <cols>[federated.171t2v40vnl0z61ed3nz41wt2poh].[qr:OrderDate:qk]</cols>
      </table>
      <simple-id uuid='{1B39B3EE-050A-41F8-9B5E-482E9D99C39B}' />
    </worksheet>
    <worksheet name='Best Employee'>
      <table>
        <view>
          <datasources>
            <datasource caption='1. OfficeSupplies' name='federated.171t2v40vnl0z61ed3nz41wt2poh' />
          </datasources>
          <datasource-dependencies datasource='federated.171t2v40vnl0z61ed3nz41wt2poh'>
            <column caption='Total_Sales' datatype='real' name='[Calculation_1033576182805000192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Unit Price] * [Units]' />
            </column>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Rep]' role='dimension' type='nominal' />
            <column datatype='real' name='[Unit Price]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units]' role='measure' type='quantitative' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rep]' derivation='None' name='[none:Rep:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1033576182805000192]' derivation='Sum' name='[sum:Calculation_1033576182805000192:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Units]' derivation='Sum' name='[sum:Units:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.171t2v40vnl0z61ed3nz41wt2poh].[none:Rep:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.171t2v40vnl0z61ed3nz41wt2poh].[sum:Calculation_1033576182805000192:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.171t2v40vnl0z61ed3nz41wt2poh].[none:Item:nk]' />
              <tooltip column='[federated.171t2v40vnl0z61ed3nz41wt2poh].[sum:Units:qk]' />
              <text column='[federated.171t2v40vnl0z61ed3nz41wt2poh].[sum:Calculation_1033576182805000192:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.171t2v40vnl0z61ed3nz41wt2poh].[sum:Calculation_1033576182805000192:qk]</rows>
        <cols>([federated.171t2v40vnl0z61ed3nz41wt2poh].[none:Region:nk] / [federated.171t2v40vnl0z61ed3nz41wt2poh].[none:Rep:nk])</cols>
      </table>
      <simple-id uuid='{4B5B0025-7ADB-48DA-8005-18B5EA15213D}' />
    </worksheet>
    <worksheet name='Count Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='1. OfficeSupplies' name='federated.171t2v40vnl0z61ed3nz41wt2poh' />
          </datasources>
          <datasource-dependencies datasource='federated.171t2v40vnl0z61ed3nz41wt2poh'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Units]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Units]' derivation='Sum' name='[sum:Units:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.171t2v40vnl0z61ed3nz41wt2poh].[none:Region:nk]</rows>
        <cols>[federated.171t2v40vnl0z61ed3nz41wt2poh].[sum:Units:qk]</cols>
      </table>
      <simple-id uuid='{4660B3EC-8099-43A7-9518-AB2113679A22}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ (2. AmazingMartEU2)' name='federated.0kfdkbz16r7jr018qb8rn0clxx40' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kfdkbz16r7jr018qb8rn0clxx40'>
            <column caption='Profit_Margin' datatype='real' name='[Calculation_1033576182834614273]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Profit]) / sum([Sales])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1033576182834614273]' derivation='User' name='[usr:Calculation_1033576182834614273:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0kfdkbz16r7jr018qb8rn0clxx40].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[Longitude (generated)]' field-type='quantitative' max='7301016.8902681461' min='-2441306.1859914446' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[Latitude (generated)]' field-type='quantitative' max='9361198.6745766327' min='4527481.3314649444' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[usr:Calculation_1033576182834614273:qk]' />
              <text column='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[none:Country:nk]' />
              <text column='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[sum:Profit:qk]' />
              <geometry column='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.1880917549133301' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kfdkbz16r7jr018qb8rn0clxx40].[Latitude (generated)]</rows>
        <cols>[federated.0kfdkbz16r7jr018qb8rn0clxx40].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7C88E0C8-3B4A-4FD8-AD2D-01BBC9A90A7C}' />
    </worksheet>
    <worksheet name='Sale Vs Date'>
      <table>
        <view>
          <datasources>
            <datasource caption='1. OfficeSupplies' name='federated.171t2v40vnl0z61ed3nz41wt2poh' />
          </datasources>
          <datasource-dependencies datasource='federated.171t2v40vnl0z61ed3nz41wt2poh'>
            <column caption='Total_Sales' datatype='real' name='[Calculation_1033576182805000192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Unit Price] * [Units]' />
            </column>
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Unit Price]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1033576182805000192]' derivation='Sum' name='[sum:Calculation_1033576182805000192:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OrderDate]' derivation='Day-Trunc' name='[tdy:OrderDate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.171t2v40vnl0z61ed3nz41wt2poh].[sum:Calculation_1033576182805000192:qk]</rows>
        <cols>[federated.171t2v40vnl0z61ed3nz41wt2poh].[tdy:OrderDate:qk]</cols>
      </table>
      <simple-id uuid='{77610061-593E-453E-8867-C3F71868D77E}' />
    </worksheet>
    <worksheet name='Scatter Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ (2. AmazingMartEU2)' name='federated.0kfdkbz16r7jr018qb8rn0clxx40' />
          </datasources>
          <datasource-dependencies datasource='federated.0kfdkbz16r7jr018qb8rn0clxx40'>
            <column caption='Profit_Margin' datatype='real' name='[Calculation_1033576182834614273]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Profit]) / sum([Sales])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1033576182834614273]' derivation='User' name='[usr:Calculation_1033576182834614273:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0kfdkbz16r7jr018qb8rn0clxx40].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[usr:Calculation_1033576182834614273:qk]' />
              <size column='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[sum:Quantity:qk]' />
              <lod column='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[none:Country:nk]' />
              <lod column='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[yr:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kfdkbz16r7jr018qb8rn0clxx40].[sum:Profit:qk]</rows>
        <cols>[federated.0kfdkbz16r7jr018qb8rn0clxx40].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{133D9D22-3D44-4983-8E4E-F0F12BBE864C}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='Mall_Customers (1)' name='federated.0rlpj5514ccu3f0zl20wh10wbrpe' />
          </datasources>
          <datasource-dependencies datasource='federated.0rlpj5514ccu3f0zl20wh10wbrpe'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{86494dc4-2606-4c31-a81e-5178ca4ca2d6}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='integer' name='[Annual Income (k$)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Spending Score (1-100)]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Annual Income (k$)]' derivation='Sum' name='[sum:Annual Income (k$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spending Score (1-100)]' derivation='Sum' name='[sum:Spending Score (1-100):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rlpj5514ccu3f0zl20wh10wbrpe].[none:AdhocCluster:1:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0rlpj5514ccu3f0zl20wh10wbrpe].[sum:Spending Score (1-100):qk]</rows>
        <cols>[federated.0rlpj5514ccu3f0zl20wh10wbrpe].[sum:Annual Income (k$):qk]</cols>
      </table>
      <simple-id uuid='{BCEEA6D1-7B04-4C8C-A26B-CA947D9130DF}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Area Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.171t2v40vnl0z61ed3nz41wt2poh].[none:Region:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.171t2v40vnl0z61ed3nz41wt2poh].[none:Region:nk]</field>
            <field>[federated.171t2v40vnl0z61ed3nz41wt2poh].[sum:Units:qk]</field>
            <field>[federated.171t2v40vnl0z61ed3nz41wt2poh].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF84130B-6B34-4962-A0D9-9F1FD3E6053C}' />
    </window>
    <window class='worksheet' name='Count Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.171t2v40vnl0z61ed3nz41wt2poh].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86C9EF91-81F9-419E-B829-7433CC2F0664}' />
    </window>
    <window class='worksheet' maximized='true' name='Best Employee'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.171t2v40vnl0z61ed3nz41wt2poh].[none:Item:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.171t2v40vnl0z61ed3nz41wt2poh].[none:Item:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA6D421D-135B-4684-8380-D535F52D6807}' />
    </window>
    <window class='worksheet' name='Sale Vs Date'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.171t2v40vnl0z61ed3nz41wt2poh].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F51190E3-7656-4CE5-AD9A-6CFD61E039C9}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[usr:Calculation_1033576182834614273:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kfdkbz16r7jr018qb8rn0clxx40].[none:Country:nk]</field>
            <field>[federated.0kfdkbz16r7jr018qb8rn0clxx40].[usr:Calculation_1033576182834614273:qk]</field>
            <field>[federated.0kfdkbz16r7jr018qb8rn0clxx40].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61C69B0C-6D3D-4A3C-B3C9-926320E0EBA4}' />
    </window>
    <window class='worksheet' name='Scatter Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='2' param='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[usr:Calculation_1033576182834614273:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0kfdkbz16r7jr018qb8rn0clxx40].[sum:Quantity:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kfdkbz16r7jr018qb8rn0clxx40].[none:Country:nk]</field>
            <field>[federated.0kfdkbz16r7jr018qb8rn0clxx40].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB488E69-081B-45F0-868C-0BD76286C79A}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rlpj5514ccu3f0zl20wh10wbrpe].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rlpj5514ccu3f0zl20wh10wbrpe].[none:AdhocCluster:1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{361E4CA9-B2E5-4016-BB29-55C93A76027C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Area Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Best Employee' width='192'>
      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
    </thumbnail>
    <thumbnail height='147' name='Count Plot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sale Vs Date' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dWWwjeX7fv3UX71sHJfWhlnp6+pzp6dmZndnLm1kngYHAdhLYQWIgSB6M
      BAgcIIGBvATIYx5iJAZyPARBAhiGsQbsBIiT9WbXe87O9vT0TN+n1FJLIilRvM+6/3kokUNJ
      xVOkWBLr89JNqYr1F4vf+v//v5MihBA4OEwo9LgH4OAwTkYqAF3XR/n2Dg5HxpkBHCYaRwAO
      E40jAIeJxhGAw0TjCMBhonEE4DDROAJwmGgcATicOgyD4N7L7Z6OdQTgcOooVCX84Z/d7ulY
      RwAOpw5DJzAMgl7C3BwBOJw6FE2HoupQdaPrsY4AHE4dVUmBbhAoavdYNEcADqeOSl2B0aMA
      2H7eWFPq+Oz+E7x36228ePIYdZ3B+fkI1je3ET97AbnEKxDehzeWz4MaePgODkejUlegEwPy
      sAVAMxz8XjcICOp1CZJOI50p4cq1N7Hy/Dk41xQYrQyFELCGAV3Xe9qIODgMk1JVgmEQ1GUF
      mqZ1PLZPAbCgaQCGCnBeRHgZqqGhXCqDMC7IcgWUroClKDAMAwDNfx0cjouarEHkWegGAct2
      /or3JYB6OQ9DJ9jcLmJhNoCaxmJpOoT111tYXrqAYiYFws/A+co7jJNKTUEs4EZd7vz0B/oU
      gMsXwuXLoebryN6/5xfPm6+n4v28nYPDSKjUFUSDHkhKdwE4ViCHU0elriIacDkCcJhMZFVD
      0Cv2tARyBOBw6lA1HT63AElRux7rCMDh1KFqxp4AnBnAYcIghEDVDfjdvLMEcpg8JEWDwDFw
      i5wzAzhMHlVJhVvkIPKsIwCHyaMmqfCIPESedZZADpNHVVLgETm4BA6SonaNRXME4HCqqNZV
      eFw8WIZ2EmIcJo9yXYHXxYOhKRDDSYl0mDAqewKgKQoGAbpJoG8BaJoGQggMXYesKCCEQJZl
      EEKgqSq0E1ISXVY0fP/O6riH4TBkmgKgKRikuwL6EoBaL+NHP/sFCIDnTx8hsb2LnY1VrKy+
      xNpmCg8fPMDDR0/RfeU1fgpVCf/tL75wEnZOGa0CIISAdFFAX+HQnMuHhXgMgIxMugSxIqEW
      COPNN9/Ay6dPEAgtgNGKUAgBZ/OMsGpNhqobyJVqCHiEcQ/HYUiUqxLcPANiGDAMAk3VQJj2
      z/m+E2K2Nrfg8oYQCrshq0DQx+HB/UeITM8jl1wH4Tw4Q1GgbJ4RVq6r0HQDu8U6IgHPuIfj
      MCSqkoaA1wWWZSHwLDQCCB2ywvpOiPnoo++YL+Zmmj+fnz8HADgzG+t/xGMiX5EQ8AhIZsq4
      dCY67uE4DAFCiOkHcHEAANeeN9gj8m3PmVgrUKEi4cr5KWztlsY9FIchQYhZF5TdW/KIAgup
      izd4cgVQlnD1fAyJ3ZJt9ykO/aEbBigKoCizKI/Is6h3iQeaXAFUJCzGw8iVJTjf/9OBQQgA
      CvSeAFw9BMRNrAAqdQVhnwgKZgaRw8lH1wlomsLe9x+i0D0gbmIFUJc1uEUOYb8LmVJt3MNx
      GAI1WYVbYFuWQN1zAiZSAIQQSIpZPGku6kditzzuITkMgYYTrIG5BOqcFzyRApBVHQxNgWMZ
      zMd8jiXolFCp7ReAswRqQ6WuwOs2P6h41I9ExpkBTgMHZ4BessImUgDlmgKfywx/mAl7sJOr
      OKbQU4D1EsgRwCFKVakZ/+P3CKjLGlTtJITwOXSidWYH9mYAZwl0mEJFQtArAjCdJj43j3JN
      HvOoHI6KswTqkUJFQtAnNl9Ph7zYyVfHOCKHYeAIoEfyLTMAAMcSdEqoSSrcAtd8PXQBEEPH
      640NM9HA0LD+ehOaXMPz5y9QVzSkNteQTOcGG/0xUijvF8BczI+EI4ATT002awI16EUAffYI
      k7CdzmBhYQGpjXVsZ2sgchVzC3Gsr62AhgiqvAMtFgID0+FkR+tKYS8UujG2mbAX38s6lqCT
      Tk1S4RK45n0UeAaSonW8r/1lhIkeBHwuEE3C60QapXIZHuEM5gUBlKGB5XnQUGAAoAzDzB02
      7GVdIYRAkjUIHN0cm9/NIV+pQ9eNZhyJw8mCEIK6rEJgv7yv1N7PVc10fFrRd0ZYqVjCVrqE
      Dz78ANvb2wi4eTx9/AJnFpeRTb6CIfjB2TgjTDcMGISA57nm2DwuGgxNQ9b0jskTDvZFUXWw
      DAOO2/+VZhgaaOlZd5C+M8K+8pX3mq9nZsyssOvXwwCA4MXLfQ16HBBihs2y9JfbH4qiEAu6
      sVuowTPjCOAkomg6eO7wlpahaei6AbDWApg4K1BVUuASONAHpsTZiA9JJyTixKKoOniLLznD
      UNA7FMiaOAEctAA1mHcsQScaWdXBc4cXNAxNQ++wD508AVSsBTAX82PLmQFOLK3J8K2wDAVd
      d2aAJu0EMB3yIJ2vOqbQE8pBL3ADgevsC5hIAYR8hwUg8ixUTe+4XnSwL5WaAp+FAMwy6Y4A
      muQrEgIWMwBDU/CIPEpVJyjuJFKpK/BYCKBbZYiJE0CxIiNoUQqRoijMxXzORviE0m4J5OJZ
      SHL7tMiJE4CZC3B4BgBMS5ATFHcyqdStl0Ci4MwATQghKFZl+NsUw52L+pz0yBPKwWSYBt0C
      4iZKAJpugBCA56y9gvGoD8ls2SmUdQKp1hXLMBZXl6ywiRKAouptv/wAEPG7UShLHR0nDvZE
      VnUIFvdWFJwZoEm7D6kBTVNwCRxqUudaMg72Q9asH24izzl7gAblmgyfxTqxlUjAhaxTKe7E
      0W52H6oVSJOr+Pj2HRBCsL7yDJ9//gC5TAr3793DTq6Ep4/u4cmLV10bk40L0wvs6niMYwk6
      eRgGgaYblsFw3axAfYVDM5wL4YAXBMD8wlmUn68im6vgyvXLWHn+DLx7FqxWgkIIWBu2SMqV
      avC7eWha+w9kNuzB5k6x4zEO9qImqxA4BrpFg0aWBiRZa3s/+xIAAYGua9B1DS+ev8D5pTeQ
      Ta4jn8sDrAdSvQgYKtiWBAQ7JcSUagrCfrN9TjsWpoL49Fmq4zEO9kKpKnCLnOU9EwUemmG0
      vZ99LYGUegUCLyKdycPn8yKVSGFucQlSXcXyhUXMzQQQP3ce9vnK76eXJVA44EKuVD+mETkM
      g4PVIFrhWaZj0bO+HnOiJ4Dl5cDeq6nmzxcW5gEAwch0P2937BysB2SFz8VDVjXIqgbBIr7c
      wX4crAbRCsfSUNT2/R8mygpUqSvwtvmgGlAUhbDfmQVOEtU2cUAAwLEM1A7N2ydKADVJa/uk
      aGUm7MV2rnIMI7IvO7kKUtmTERbSLhAO+HIJ1M4YMzECaJTNcLVZK7ZimkJPxs0fFT++9xo/
      vLs27mH0RLmDACjK7BmmtckKayuAcqmEdPI10vnT8SSUFA0cyzRbaHZiLuqERZeq8ompl9pp
      BqCoxixgvQxqu8u7d+8zlEoVBELTmPrwvXaHnRiqddUyZ9SK2YgPqb1KcdSEVsrKlmrIFGsn
      4jPoJAAA4DgaiqbDDYuc4XYnzQbdEPzTiIbCwxnlmOn2IbXicXGoSsqIR2Rv8mUJdVmF2sbD
      aicOtkY6CM8ybS1BbdcDqXwNSjWNneTm0UdoA4otTTG6wbMMGJru2l/qtKLpBlRNRzTgRqVm
      /wdBt4dbpyVQWwEsnpnH7k4W8fPLRx+hDWhXDcIKiqL2kmMmcx/Q6KAZj/ptXyyMEIKa1Hl5
      y3MMlH4EsPr4M/z0l3chySp2M9nhjHTM9OIFbmVugi1BDWvZSXgIEALoBgFDtzdudMoKszzr
      wpVbuLQ4B02uQu7SZ/WkYAqgtyUQYDbNmFRLUL5slo6JR+1fLpIQAgLStvoz0LlXWFvZEM6N
      gE+AXDsZprBu9LMEAmA20Lb5zR8V2VIdEb/LdAja3BRqEAJCcKjWayudQqItrUC53R1cfesm
      pGIOCxeXhjPSMUIIQaEid40DamUm4sVOvgLDIB0/3NNItlhDJOBGLOhGpliDQQhom5pCdYOA
      ptBxfJ3apVrOAC9XXmL7+V0gsojN1efNnxNiIJFIghCCXDqJzWQaulLHyxcvIas6dhKvsb2b
      P+KfNBokRYPYR3Aby9DgGKZri53TSGMG4FgGPMvYOkW0Kilwi3xHX4XIc20tepbfiMsXF/HJ
      /Vf41oez2NgAZA0QWECT63idSGI2HsN2pgIeGlYqOcTjs3j1agUUeFB6CtFosBkSbZeEGE0z
      wLJ0X+PxewQUqxJcwmRFhWZLNYT9LhBCEPAIKFQkeHqIoRoHDR9Ap/sq8iwyReu6r5Z31heJ
      41e/HQcAeIwMdmtLmPebLZLCAQ8AAyzLQwBQogDRJYIyVHC8HzSlNlsk2SUjzCAEmq6DBiyz
      htoRDbiQzlUQC/RuPToNlKoyPAILXdcxG/FiK13ETMg97mFZUqya4ux0XwWORk1SrTPGul2A
      5UVQLQul+GwcFHhEo34AQIRjUK/JiC9cgKbUAQi2a5GUK9fh94qH2ud0YzrkRbYsTVR2GCEE
      VUlFwGdmzp2bDWFzt4z3ryyMe2iWVCUVQa/Y8R55XQIkRbM8xvKs1cef4dMHLwEAy9fexa3z
      X/7O7zcTYsJhqxAJez4p86U6wr7+xxYNuE9MSPCwkFUdFNAMf1iI+fH58+R4B9WBck3pWunD
      JbBt9wBt/QBvX1kCQ49/+TIM+jWBNgj7XchOWGJMo3RkY1MZ9ruQK9v3M+gWBwQAotC+NlBb
      P0BJNhDyu1AvF482QhswqAACHgHFCSuXXjxQPt7n5s31s02r5XXKBWjQyRNsuQQihCASDuPC
      2QWk8ye/SFShIiEa6H8T53XzqNTtHww2THLlOiIty0WGphHwiMiV6ogFPWMcmTVma6TOAuAY
      GlqbxHjLGaBe2Mb3vveX+Pj2ZyBs/09Ou5EfcAbwijyqkmILS9ZxYTrB9u+XpvbaR9mRqqR2
      NdEyNNV2BrMUgDs0i+98430Qg4Dne4+fsSvFHqpBWMEwNASWRW2CwqJNJ9j+2dLOZeNrbapC
      t0LT7Vultt0DJHdz+Or77yCxsX6kAdqBQkVCsE1TjG54XByqE7QMyhbrh2YAuwbFNUy23Qod
      MDQNo58ZoFQq4iu3bmFjaxfvvvv20Uc6RgxCzAZq7sFmMp9bQLk2GRthQghy5cMm47mYGRho
      t6WgQQhU3ehY8RtoLIGsx265Cb5/52dQKXMa3Eru4OK5uSMOdXyomg6GoQcOaAv7ReTKdVwY
      8rjsCIFZZVng938tgl4RxaoEQswkc7ugagY4hu6as0zTFAghlkF9lgIIxuawtHzJPIC1ZwxI
      r6ja0XJawz4XciVpiCOyL4QQ6Ib5pWqFZxmzArNhgKfH79lvoGo6uB7uLUVREHgWsqIdKotj
      uQS6dv1tuFwuuFyuvsMH7IasaIeeaP1gd0fQMKnLGniWOTRb0rRZLS9btJdJXNUMcGxvpa3a
      +QJOfWGsfjPBDjJJZRIbeQBWS4q5qB8Jm6WINnKXe0HkrcMhJkQAg/syQl4X8gPMAIQQyKpm
      u41jJxp5AFbM7TUQtBP9lLqZ8BlgcAG4hPbJFN34/f/8A1snkxykkwDiNvQF9CMAV5tmeQMu
      jnV8/ukdSBqNcwtR7GQLCMXmkEuug3Ae3HzrKuxiLBg0DKKBwDGQ1f4FoOoGNnaKyFekrq56
      u5At1nBmOmD5u5mwF9tZe5XJbNcb2Ip2M8BgAiCUaQ+jKdTqOq7fuIaXT58gGDkPRitCJgSc
      TRJicqU6FmeDA7c8oqlGYV3lkHWkE8ndMgxCbJ1McpBMsYprizHLz8rn4lCqyZBkpaf6qsdB
      qSrBzbM93VueZVCty4eOHVAAKnSdAmtoYAUGD+49RDAWRz61BsJ5cMZGCTHlmoKQ332kpJag
      z4VKXe0rGCxdqCHid2EnXz0xCTWFioxY0Nt2vB6Rg6waEAV7zGg1WUM86uvp83WLPBTtcKuk
      we4MLeDd97/SfHnurPnv+fmZgd5ulFSk7rEi3Qj7ROTKUl8CSGTKeOeNuO3Wze0ghDTrAbUj
      GnAjU6rvC5ceJ5W6Al8fewCrnAB7zGUjpJdowW6EfC7k+zSFpjJlXL8wjYzNbOftUDQdFIWO
      jiUzJsg+xcJ6SYZp0K441qkWgK4bUFX9yFUdwr7+nGGEEKSyZVw+F0OxIsNoE4diJ2RF72pT
      t1tQXK3HhidAeyvQqRZA4wM6an37fp1hmm6gKqsI+0S4RXPzaHeqPSwV7RYWLat9OsImTgA9
      hMr2Qr/hEHVZg4s3hWfGEtnfk9zJB9AgPMBScJTIig6+SyRog4l0hJmOkiEIoM8vcbb0ZVbV
      bMR7IipLZIs1hLvUP/K5BdRkDZo+/vxg09Oudw2FbuASOEjyYafkqRbAUb3ADfweAeWaAqNH
      n0YyU0Y86gNgv3VzO7KlOqL+zv4KmqYQ9Iq2mNEaIuzVJzGRS6BhCYCmKDA01Tax+iDJTAXx
      SIsATsIMUDqcCWbFVMiNdGH8+cGSosElsD3v71yTaAXKlSWEBiiIdRCKMvODOzVcbiWVLWN2
      TwDRgBuZ4vifmN3Il+sI9dBAxC4zmrnP6t26J/AsJIvgxFMtgGSm3HwSHwWKouB18T33y8qW
      aojuPU09IofaCagsUan1Fldjl74JdVmF2KMJFDDTIkHMjjKtnGoB7BaqiAWHE4cT6dESpOkG
      KnUV/r2GfCxDwy1wKNm4wFYjudzbg8e8MQOMW9CDODhpi/Iop1YAhBDU5OGYQQHTG9zL5q9Y
      leBz882eVRRFYTrsxXbOXpGUrdRlDRxLg+0huyrgEWwh5n5CoRvQNHXIKXlqBVCsyvAIHNgh
      BeP16gzLFg/X1YnvNd62K+Wa3HPVDIFjoelG2yoLx8UgAmBo+tC4T60AUpkyZqO+oVUxiPhd
      yPawBEpmy4hHvft+ZsdkklaKVbnnHso0TSEacI+9UtxAMwA1xBmgWsxiZX0TuipjZWUVimYg
      ndpEOmuPYrrJbBlz0aNvgBsEvSIK5e7VIVIWG+941GdrZ1gvXuBW5mxgCRpoBmAoaMPZA+h4
      /PgZGJrB5toapqbDWF1dQbaoIredgB0KCSZanFHDwO8ReorpMWeA/ddt1Nbs1ZF23JgtkXo3
      FsRt0D+4n2wwwNyLWYVDDJwSyfA+MNUsckTEvNsDykiA432gaR3GXn2ZcWaEbaaL+PbbZwfO
      BDuIW2BQqh7OKDpItliH38PvO46mCAghkCSl59iV4ySTr+LyeetMMCtmwh785F5maJ/tIJSr
      Mlw809cYRK6RFfalc3RAAfCIhgQU6wSL80E8fvwM8+eWkEu8gs77x94iyTDM5I7psA/sEYpi
      tcIwDChQ0AnVNv6EEAJJ0eBzi/tc9IQQeFw8JNWA22W/YsO5ioSpDplgB5mfCmA7XzU/kzGU
      iiOEoCqrCHhdfWXbuQQeqkb2nTNwoPzZC280/38jGAMARPxXB327oSKrGhiaHmruKkVRcO85
      tQTOer1cqJgm0IPXpSgKsxEzJCLcx1r7uCiU+6ueHfAIqEoKNN3oqTLbKOinJlADq4bZp9IK
      VKhIPVs1+sHj4lDtUOYkma00QyAOYpcQAiv6iaoE9jzj4nibhxgGMb27fWDGA+2/f6dSAI1o
      zGFPzyGviHwHS1AqU24vgIjXlgIghEDReo+rbzBOQRNidojvd4a3igg9lQJIZMqYiw3PAtSg
      W2KMlQ+gwXTYix0bdlmp1hW4BLbpue6VM9MBbKTHZ/LWDaPvMYsWaZGnUwC7Jczt9TEeJt28
      wckOplczKrQ29hiag2R6yAOw4sx0AK93xiMAWdXADbABtwqJPpUCSBdqI2no1ikzzDAIMsUa
      ptpcV+BYMDSFmkVW0jix6gjTCzNhL3bGFN/UcIL1u8IV+cPtUk+dAHTDQKkqITxAT7BudFoC
      KZoOmqbarkspas+ZZoNAslb6dYI1CPlElKrKWNIj+3WCNbCqDHHqBFCqyvCIPJgRlO/rlBNQ
      rsldXfOzNowKzZbqzdyFfmBoemzpkYOEQQCNEumn3AqULdVHZmvv1HA5mTXTIDutS2dtaArN
      FgebAYDxJfyXqnLPFeFaETgGiro/q+/UCSCZGW4QXCsCx0LVdMtCV6keYo/iER+SGfvNAP0E
      wrUyro3wZrqE+Vj/Rg6eY6Bop1wApgl0+BYgwAwF9rp4y6C4RA/plzNhL7bz9hEAIQTFSud6
      oJ04Ox3AxhgE8CqZx4W5UN/n8ewkzAC7paFGgR4k6BVRqBx2hqXzVUyFOluefG4e5ap8KC91
      XCiaDoamDnVO7JWZyPHvaVRNR6ZUw3TY2t/SiYmYAXJl6VCf22ES9B0WQKO/brelhMizAAVI
      ij1MoYqqgztCdKpH5FGT1GMN8y5WZfjdwkCi5dhTLgDdMFCXj14NuhNWvoCapIKlqa7dKCmK
      wlTQg3TBHhWjy/VGA/HBZgCWoRHyu7B7jHWC1lMFnJsNDnQuzzJQ1f0h+gMLQJOr+OyLh6jk
      07h//z4yxSpePHmIZyvrGNcMny3WEfK5RmICbWDlDS5Ueo+mnLGRKTRbrCPqdx0pbfTMlB+b
      O8eXHLOSyGEpHh7oXJqmQNP0Pt/FgB1iCNZfb4LjWKR3i7hy7U2sPH8OToyB18pQCAE7hoSY
      ZKaIqZB7pIkaAQ+Pp+u7+66RzJQQC/Z23emQG4l0Edry9MjG2Cu7hQqCXvFIn9d81If17Tze
      Wpoa4sjas5bK46uX5wYeM8dQkGQV1N5jeiABGLqMak1CansH7NwcKuUKCCNCkauAroClqGYi
      zHEmxKRyNczHAiNtSRQLepGvSPuusZ2r9nzdhakgfvj5mi3aJuXLMmIhz5HGci4exsOPnx/L
      36MbBrKlOmaj/oETnXiOhUHQHO9Ao6ZZETfeeguL5Qo8Lh7rr7ewdOECirspEGEK40r6S2ZK
      eOeN+EivEdrbBBNCmk6vZLaCD68t9HT+bNR0HrWePy6ypRreWIgc6T3m9ypeGIQMbE3qFTPd
      VDhSWinH0lBblkBHWiz7fF7QLI/FC4vgGBrRmTnEQqMzQXaCEILE7uicYA04loFhkH31ZXby
      FUx3MYE2cAscZFUfe10doL+9Szt4jgFFAXIbD/kw2UgXcWbKuo1rr3AsA7XFEnRqrECGQVCu
      yUOpBt0JmqJAURT0lqdIP72qWIYGS1MD9R4eNuWaAt8AQWUHCXldHROFhsVqIjeQA6wV7oAz
      7NQIwIzGpEdqAQLMqE6BY5oxQXVZBSj0nJ9KURSmwl7s5MabHGMYBNUBg8paoSgKZ48pJGI1
      kceFAS1ADVwH4rlOjQB2i2ZXllGvQymKMuuE7oVFp/NVTAU9fa3nzZig8QbF1WQVIt9/JpgV
      Z44hJKLhbDxqoOPBrLBTI4DkbnkkWWBWtPoCtnMVzET6c8vHo96xN82o1BV4jvj0bzAf82Nr
      d7S+gEJFgkvg+kret+JgXrCtBbC1W8L376z2dGwiUxpJHrAVrQJIDBB9OhsZf6nEfuqBdmMq
      bFa+69XnQyzq9HfDXP6Ejmw5O5gWaWsB+N0Cfnh3rSeLSWtbolHT2jc4le2/Ccd0yIN0frz5
      wdliDZHAcHonuHgWNE11LBnTyma6iD/47id9/f2ryaNvgAFAFLiTMwP4PQIiARfWU/mOxxFC
      kC50j8YcFmG/iFzZ9AUkM+1rAbXD6+IhqxrUHnuOjYKj5AEchKIoRP0uZIq9xTjdeZbAnWcJ
      7PZ4PCFkKBtg4HBSk60FAAAfXF3ALx5tdjxG1Q3UJHUkxbCsCHhEFCsSdMOsqdNvE45Gy6Xy
      GAtLDXMGAICF6QA2eyiTYhCCu89T+I2vv4kff7He03truoFMsYaZAUKgD3KwOJbtBfDW0gzu
      r+50DLktV2X43PyxeVYDXgHFqgxJ0cAydN8VygAgFnQjc4QoSkW1zkzrlWHOAEDvlqB8uQ6K
      ovA331vCZ8+S+5xS7SjVGvf36OM8WB7R9gLwiBymgh6spQptj9kt1obWC6wX3AIHWdGQypb7
      NoE2iEd82NodfCP8X/7XZ/jjHzwcaB+hGwZS2fJQnYYLU35sprtbgu6v7ODG0jT8HgHzU348
      eZ3peo4ZAn30DTBwApdAFEXhw+tn8PMHG22PGVUhrE5jcgksVhP5gbPPri9N4/bTrYHOrUkq
      1rcLSGRK+ItPXvYlAoMQ/Pf/ex83L84OdcnYqzf47vMUbu3Fa330ziJ+ePdV13NWEjksDWED
      DJwwK1CDdy7O4sHqTtvpclSlEDvhEjisJvNtSyF24/xMCDVJHai41N3nSdx8Yxa/93fex90X
      Kfz84UZPIiCE4C8/XUWhIuG3vn1lqEtGl2B6wjsV/qpJKtKFKs5Om/E8Fxci2M5WutZKWksV
      cG5msCSYgwxtCVTIbGN9MwVDU/Bq9RVU3UBmO4Hd/PDt2yLPYjbixfq29TKotTH1ceH3CHi+
      kcFseLDr0jSFb9w4ix/fe93XE5wQgp8/3MTXrp2ByLP4F7/1VfyfT17i3sp213Pvrezg44cb
      +Ce/fmsoHuBWKIoyHXwdlnXPN7NYmgs3w1VYhsZXr8zjZx1md90wsDukDTAwxGA4wgiQ8xms
      vHqFcDSIldVV7OYlZBIb6K2fen98eG0BHz+0tgYVKqMPgjtIxO9CKldBLDT43uODqwu4/TTR
      V2RouaYgX6k3oyK9Lh7/8rc/wB//4BFebGbbnreZLuKPvv8A//zvvg93Hw2m+2FhqrMl6M6z
      BN69tD9c/Vtvn8NP778+1L+3QbZUh98tDK0PAUvT+wIZB85iqJdyEKPT0CtFeH1eUMkEOCEG
      RjOgEQIMOSPsytko/uwnTyHJyr7yg4qmQ1E1CCx9rC17gh4BHpGDW2AHvq7I0bgQD+KLF0m8
      vTzT0zm3n2zi5vIMDENH4zsT8PD4Z7/5Lv79n97G7/3tdw+VhSlWJfyHP/0lfvdvvYPggfZN
      w2Q+5sOjtTS+rh3OjSAEeL6RwW9/+/K+6/tcHEI+ES83M1iaO2znX0/msBDzDRs7q+wAAArI
      SURBVG/MxICqG833G7hH2PZOBqJXR3w2iMcPn2Jur0WSyvvAj6BFkt/LIh71YX2nhEtnos2f
      7+wVwuW4482wigQ9iEd84I6YCfWdWxfwP3/2DLcuzXVdkxNC8OmzFH7nV68fysA6Mx3EP/2N
      d/GHf/YZ/tU/+BqiezZ+WdXwH//8Ln7zm5exPB8Zqan4/GwI3/t01bJ10vp2AVNBD3xu8dDv
      PnpnET++t4FLZw+nVa5tl7A0HxlaxhnPm4aAxvsNuARicPMr7+Hy5YsIhqZw48YNRAMeXLx8
      DZeWzg1YY6A7Vk6x7Wx1aOvDfpgOeXD5XOzI77M8H0a+XEe22L3GZq5cR7WuYGHK2uK1NBfG
      7/z16/h3f/IJSlUZBiH4r//7C1xdnMIHVxdG7icJ+VwoVWXLJd1nz5K4dSluOYYbS9NYSeQs
      O868SuaxGB+OBQgw9x36sDLCjptri9N4vLa7zwGUyIy2EFY7zs0E8fe/c+3I70NRFL7x1jn8
      5P5612PvdPgSNbhxYRq/9tVl/MF3P8F3f/QYFAX8+tcuHXmcvcDQFHiOOVSA1jAIPn+Zws2L
      1umqHMvg5sVZfPo0se/nhBBkS7XmbDasMeoGaS7NT5QAXAKL+Zh/32ZvlLVAO0HtZYYNgw+u
      zOP200THUuOEENx+soX3L893HdeH1xbw3ptzeP46g3/8a2+DHsBTPQgURWEuYuYIt1KoSKAp
      CkFve7/DN2+cxU8OWMTyZQnuIYRAHxxja4nEEyWAxs39eG8ZZAajDbch9jgIeEUsxPx4vJZu
      e0ymWIOqGT3lHlAUhb/x3hL+9T/8JoRj3htZhUR88XIbN5ZmOj4w4lEfaJra5x1fS+VxfjY4
      9KVbqzf4RAkAMGODHq+loWhmQ+66og0tsWOcfHRrET+4u9bWavbLvad/rxlvw5yh+sFKAHdf
      JPHOxdmO51EUhW/fPI+/+vxLz/BKIo8LFpahoyLwLCT1hAqAY2mcnQ5gZSsHWTGLu3IjzgM+
      DpbnI9jJVVC2aMBhEILbTxJ4/0rn5Y8diEd9+7LdqpKC3UINZ2e6V3N491Ic91d2oOyVLxxW
      DsBBRJ6FrJzAJRBgPik+uHYGv3i0ie1cBdMh79jr6wwDlqHxtetn8ON764d+t5uvgqapoUZv
      joqI341iRW56W19sZLE8H+7J8yxwDN48F8MXL1PQDYJssY7p0PAtfCJvFjXY2i2dPAEAwLXF
      KTzbyGAtlT/2GKBR8itvn8PPHmwc2gx//GgTHx6DGXMY0DQFv8cMFweAT58l8e6luZ7OpSgK
      H908jx/eXUOpKsMtcgOFmndD4Fn80f97gP/053dOpgBEnsXZ6QB+/MX6WCxAo8LnFjAb8e6z
      cukGwZ1nSXzlzd6+RHZgJuzFdrYCwyBY2cri4kLv6/hzs0HUZBW3n2yNZAMMADcuzOBbb53D
      v/lH3zqZAgBMp9jDtfSxB8GNmo/eWcQPWkKEk5kSPCKH0Ah7HgybRhPt1zsFxIIeeMTejRQU
      ReHr18/gT/7q8VBSIK1491Ic3755HhzLnFwBXD4Xw0zYOxYv8Ci5ci6GxG6p2YTj44eb+OBq
      b3VH7cLZ6QBebxebjrt++eqVBeiGgfMD9gHoh6EJgBADL589wotXG8fSH8AlcPi3v/sRXCOK
      bBwXDEPjvcvz+MWjTRgGwb2VbdzsYkK0GzNhL1K5Mu6vbPcc5NeKzy3g9//eh8eyvB2aAAy9
      CpqLgNMkHFdMZsArDiVP1G5848ZZ/Oz+a6xvFxD0igh4jjfU+6j4PQKyRTP3NzBAmDpFAdcv
      TI+8zCUwRAFQYKCqdciqNrJguEkh4nch7Hfhf3zvPj68tnDiRM4yNGJBN95enhl5qcqjMjQB
      0IwLYT+L0Ex88CQDBwB75sBbF/ByK4u3l0/W8qfBX7t5Hh9eOzPuYXSFIiMoT0YIgWEYMAwD
      9JBT7yYF3SC49zI18oYfk85IBNBgUAHout53Is1RxGbspVb1e/5Juqaum+Xj+7WrH+VvHOQ+
      HuWag1xvpAIYlONuH9T4CE7zNcf1N9r9erYUgIPDcTG2Bfrm6hOsbO40X798udL8vyoXkUzl
      QXQVDz//JbJVDURX8fHPPxnIxEoMFXdv30Zpr3qxXNrFZw9ftD2+Vs7j9mf3QABU8mncffBk
      gIsSbLy4j9VkDgCw8eoFHj16gmqbujn53RTuPXoGAEhvvsSTtWTfl9xJrOPpyzUAQDm7jfsP
      zb7NX14j06zYsf7sXrPMzBeffoJSvf/u9ZViFne+eAgAkKsFfPHwGfLJBIpt/sZ0ch1PXqwD
      IHj97Aus91BJrhW5VsLHn97de6Xhzief4MGDR1AtUjANQ8ODX36MvGzA0FX89Oe/sHzPsRls
      Zmbn8CrdEjZbreLF8xeYDntRkFVoqgugWcxNRyBrBJuv1+Hx+gZzslEsZqej0HXz7GS6AD9P
      UCntIF0SoFXSMLQadjMV3Pr6BxA9AfjdImCoSKSLcA/oa5ufi+NZxvzK6boOmuVgVLP40SfP
      EZmJQy1koXMibt28gUBkGmI2D1WqoFg3ALp/qcdmFpBbeQkA2NrJ4vrVa1h5+hQvV55BNTgU
      t9YQu3gVS/MziMdn8bqkIZN6DVbwQWtTlqQTbl8IXnEXAGBoBmithnSOwE0Dq6kMRI8bLGhQ
      0LF08SKiM3Hknr9GvZSFQligh7qgrXCiF0FfIz2SwBeMYXHei+dPV5HJbCEUnYEhVTBzZhEz
      0RBmpyLQDCDxeh0un7VTbUwzAIGmqVAVBQYB5HoNoBjomopSoQi9uSojUFUVqqpCliXsbieQ
      Lw5SUNZ8H0VVQQhBJpNGrVxAarcAqVZBuVoDoTmEg14QAMQwoKoK6tUKFEXGxsYWlD6/HwSA
      pqpQVQWEEISiMwi7CF6tb8IbmUUs7IcvGIVH5AACGLoGRVFRLpch16vYSnUvdHXwis3P1CBw
      sRR2iyVUFQWaomNhbhZTM7OYikXMY/fGVq0rKOXT2M22r73a9oqGDlVVoe19kafmz2I3sQFZ
      qiMyPQdD00DrVWi0CAqArmlQVRXFchVStYSdnfYZcG0uuDdu8+GgqQq2t7PgGQ2+yCwiQTcE
      dxBBn6f5eSiKDEmWkd1OIFs8XIVvTDMAQa5QgYsFNAMoFvJYfuMiaK2OXKmOeCQIEAaGpqJm
      CKDqBSxduob5s0sQ3f0HhRFNgUZzkColIODG1Rs34RIF1OoyCrkM5maXkU2s4ul2DsvXKdQq
      RXi8HlRVBteuXcXS0iL4AR4VO4U6fAwDzQBYmkBhfLj29jJ2kpvwer1IrW/g3BtvgqYp5DNZ
      eDxesO4Qrl6bwuIAbUdzmTQ8bg9kzcDZ5UtIbW1i+dKbEBkDqXQBZy6cR7ZYgn8qhGxZgQga
      8bPLmJ1bAM32n1VXLRfg8bhRrNYR8vgRcQO+99+D4PUhu53E1IVlMIYEnRH3xpeF2yPCH41j
      anoWstHfhyrVKvB6PMgVy5iOBhAKuCAGojgT8CKV3II3GINXLEFWdQgsUGfcYEp5XHjzKubO
      LcLtOpxc72yC99A1DQYAlmGPyfNKYBjE8ZOMGUcADhON8/hxmGgcAThMFLoqYX1tvVmFzlkC
      OUwUudf38PMXMrRyEr/yra85gZsOk0cgHAPR00gkU84SyGGyYHgRyVdPoQohaJWCswRymGyc
      GcBhovn/zKKMmK+pdDkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Scatter Plot' width='192'>
      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
      kOMHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      iutL/AAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
